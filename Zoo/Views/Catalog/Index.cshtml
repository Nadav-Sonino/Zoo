@model IEnumerable<Animal>
@{
    ViewData["Title"] = "Catalog";
    var categories = ViewData["Categories"] as List<Category>;
    int? selectedCategoryId = ViewData["SelectedCategoryId"] as int?;
}

<div class="row">
    <div class="col-8">
        <form method="get" id="searchForm">
            <input class="form-control" name="searchTerm" value="@ViewData["SearchTerm"]" placeholder="Type to search..." />
            <!-- Include other parameters to maintain state -->
            <input type="hidden" name="categoryId" value="@ViewData["SelectedCategoryId"] ?? 0" />
            <input type="hidden" name="page" value="0" />
        </form>
    </div>
    <div class="col-4">

        <form method="get" id="categoryForm">
            <select class="form-select" name="categoryId" onchange="this.form.submit();">
                <option value="0">All Categories</option>
                @foreach (var category in categories!)
                {
                    <option value="@category.CategoryId" selected="@(category.CategoryId == selectedCategoryId ? "selected" : null)">
                        @category.Name
                    </option>
                }
            </select>
        </form>
    </div>
</div>

<br />

<nav aria-label="Animals Pagination">
    <ul class="pagination">
        @if ((int)ViewData["CurrentPage"]! > 0)
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-page="@( (int)ViewData["CurrentPage"]! - 1 )">Previous</a>
            </li>
        }

        @for (int i = 0; i < (int)ViewData["TotalPages"]!; i++)
        {
            <li class="page-item @(i == (int)ViewData["CurrentPage"]! ? "active" : "")">
                <a class="page-link" asp-action="Index" asp-route-page="@i">@(i + 1)</a>
            </li>
        }

        @if ((int)ViewData["CurrentPage"]! < (int)ViewData["TotalPages"]! - 1)
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-page="@( (int)ViewData["CurrentPage"]! + 1 )">Next</a>
            </li>
        }
    </ul>
</nav>

@{
    await Html.RenderPartialAsync("_AnimalsPartial");
}